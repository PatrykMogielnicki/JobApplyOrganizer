@page "/"
@using Domain.Entities
@using Domain.Entities.Interfaces;
@using Domain.Enums;
@using Application.JobService.Interface;
@using Application.JobService.Model;
@inject IJobApplyService service

<PageTitle>JobApplyOrganizer</PageTitle>

    <main>
        <div class="top-row px-4" style="flex:2">
            <EditForm Model="@formModel" OnValidSubmit="@Add" id="taskForm">
                <DataAnnotationsValidator />
                <ValidationSummary/>
                <InputText @bind-Value="formModel.Name" id="taskNameInput" />
                <InputSelect @bind-Value="formModel.Stan">
                                    @foreach (Enum element in Enum.GetValues(typeof(Stage)))
                                    {
                                        <option value="@element">@element.ToString()</option>
                                    }
                    </InputSelect>
                    <InputFile OnChange="@UploadFile"/>
                    <button type="submit">+</button>
            </EditForm>
        </div>

        <article class="content px-4">
        @foreach (Stage stage in (Stage[])Enum.GetValues(typeof(Stage)))
        {
            <div>
                <h3 style="text-align:center;">@stage</h3>
                @foreach (IJobApply line in service.GetAll())
                {
                    @if(line.Stan == stage)
                    {
                        <EditForm Model="line">
                            <InputText @bind-Value="line.Name"/>
                            <InputSelect @bind-Value="line.Stan">
                                @foreach (Enum element in Enum.GetValues(typeof(Stage)))
                                {
                                    <option value="@element">@element.ToString()</option>
                                }
                            </InputSelect>
                            <InputTextArea @bind-Value="line.Description"/>
                            | @line.Date | <a target="_blank" href="@photoDirectory/@line.FileName">@line.FileName</a>
                            <button type="button" @onclick="ReRenderView">Save</button>
                        </EditForm>
                    }
                }
            </div>
            <hr/>
        }
        </article>
    </main>

@code {
    private JobApplyModel formModel = new();
    private long _maxAllowedSize = 1024 * 1024 * 15;
    private string photoDirectory = "JobOfferPhoto";

    protected override async Task OnInitializedAsync()
    {
        service.Load();
    }

    private async Task UploadFile(InputFileChangeEventArgs e)
    {
        //TODO get directory name from config
        await using FileStream fs = new(
            photoDirectory + Path.DirectorySeparatorChar + e.File.Name,
            FileMode.Create
        );
        await e.File.OpenReadStream(_maxAllowedSize).CopyToAsync(fs);
        formModel.FileLink = e.File.Name;
    }

    private void Add()
    {
        formModel.Date = DateTime.Now;
        service.Create(formModel);
        formModel = new();
        ReRenderView();
    }

    private void ReRenderView()
    {
        service.Save();
        StateHasChanged();
    }
}